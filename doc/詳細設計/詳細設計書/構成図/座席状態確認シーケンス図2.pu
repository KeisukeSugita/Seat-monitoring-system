@startuml 座席状態確認シーケンス図2
hide footbox

participant "RegularNortify" as RegularNortify
participant "SeatMonitoringApiClient" as SeatMonitoringApiClient
participant "SeatsController" as SeatsController
participant "Photographer" as Photographer
participant "HumanDetector" as CsHumanDetector
participant "HumanDetector" as CppHumanDetector
participant "SeatStatus" as SeatStatus
participant "Screen" as Screen

-> RegularNortify :start(Configratinon)

RegularNortify -> RegularNortify : execute(Configration)
activate RegularNortify

loop stopFlagがfalseの間
	RegularNortify -> SeatMonitoringApiClient : get()
	activate SeatMonitoringApiClient

	SeatMonitoringApiClient -> SeatsController : seats()
	activate SeatsController

	SeatsController -> Photographer : get(Configration)
	activate Photographer

	SeatsController <- Photographer : "Configration"
	deactivate Photographer

	SeatsController -> CsHumanDetector : execute(Configration)
	activate CsHumanDetector

	loop 監視座席数
		CsHumanDetector -> CppHumanDetector : execute(picture)
		activate CppHumanDetector
		CsHumanDetector <- CppHumanDetector : "result"
		deactivate CppHumanDetector
	end
	note right
		監視座席数分の画像を1枚ずつ判定し、
		結果をConfigrationに反映する
	end note
	
	SeatsController <- CsHumanDetector : "Configration"
	deactivate CsHumanDetector

	SeatMonitoringApiClient <- SeatsController : "座席情報のオブジェクト"
	deactivate SeatsController

	loop 監視座席数
		SeatMonitoringApiClient -> SeatStatus :new
	end
	note right
		監視座席数分のインスタンスを作成し、
		リストを作成する
	end note

	RegularNortify <- SeatMonitoringApiClient : "List<SeatStatus>"
	deactivate SeatMonitoringApiClient

	RegularNortify -> Screen : update(List<SeatStatus>)
	activate Screen
	RegularNortify <- Screen
	deactivate Screen
	deactivate RegularNortify
	... (60秒 - ループ内の処理時間)秒待つ ...
end

@enduml