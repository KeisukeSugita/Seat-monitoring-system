@startuml クラス図
left to right direction

package 座席監視アプリ {
    class SeatMonitoringApplication {
        + Main():void
    }

    class "Configuration" as ClientConfiguration {
		'hostnameとかendpointとか
        - ipAddress:string 
        + Configuration()
        + GetIpAddress():string
    }

	class Screen {
        + Show(Configuration):void
        - Update(List<Seat>):void
		+ Close():void
    }

    class SeatMonitoringApiClient {
        - ipAddress:string
        + SeatMonitoringApiClient(ipAddress:string)
        + GetSeats():List<Seat>
    }

    class PeriodicNotifier {
        - destination:delegate
        - isStopRequested:boolean
        + PeriodicNotifier(destination:delegate)
        + Start(Configuration):void
        - SeatMonitoringTread(Configuration):void
        + Stop():void
    }
    note top of PeriodicNotifier
        ・定期的に座席状態の更新を通知するクラス
        ・コンストラクタで通知先を登録する
        ・executeメソッドから1分毎に座席の状態をdestinationに通知する
    end note

    class "Seat" as ClientSeat {
        - name:string
        - humanExists:boolean
        + Seat(name:string, humanExists:boolean)
        - SetName(string):void
        - SetHumanExists(boolean):void
        + GetName():string
        + GetHumanExists():boolean
    }
}

package SeatMonitoringAPI {
	class SeatsController {
        + GetSeats():string
    }

    class SeatsApiManager {
        + Execute():List<SeatsApiResult>
    }
    
    class "Configuration" as ServerConfiguration {
        - seats:List<Seat>
        + Configuration()
        - SetSeats(List<Seat>):void
        + GetSeats():List<Seat>
    }
	note right of ServerConfiguration
		シングルトンパターンとし、ASP.NET Frameworkで
		提供されている初期処理でインスタンス化される
	end note

    'Cameraでよくない?
    class Camera {
        + Shoot(moniker:string):Bitmap
    }
    note right of Camera
        ・カメラから画像を取得するクラス
        ・取得した画像はConfigurationのListのpictureに格納する
    end note
    
    class "HumanDetector" as CsHumanDetector {
        + Detect(Bitmap):boolean
    }
    note right of CsHumanDetector
        ・画像に人が写っているかを判定するクラス
        ・実際に判定を行っているのはC++のプログラム
        　(CppDll:HumanDetector)
    end note

    class "Seat" as ServerSeat {
        - seatName:string
        - moniker:string
        + Seat(name:string, moniker:string)
        - SetSeatName(string):void
        - SetMoniker(string):void
        + GetSeatName():string
        + GetMoniker():string
    }

    class SeatsApiResult {
        - name:string
        - humanExists:boolean
        + SeatsApiResult(name:string, humanExists:boolean)
        - SetName(string):void
        - SetHumanExists(boolean):void
        + GetName():string
        + GetHumanExists():boolean
    }
}

package CppDll {
    class "HumanDetector" as CppHumanDetector {
        + Detect(unsigned char[]):boolean
    }
}

SeatMonitoringApplication -> ClientConfiguration
SeatMonitoringApplication -left-> Screen
Screen -down-> PeriodicNotifier
PeriodicNotifier -down-> SeatMonitoringApiClient
PeriodicNotifier .> ClientConfiguration
PeriodicNotifier .left.> ClientSeat
Screen .> ClientSeat
Screen .> ClientConfiguration
SeatMonitoringApiClient .left.> ClientConfiguration
SeatMonitoringApiClient "1"-left->"0..10" ClientSeat
SeatMonitoringApiClient -down-> SeatsController
SeatsController -left-> SeatsApiManager
ServerConfiguration "1"*-down-"0..10" ServerSeat
SeatsApiManager --> ServerConfiguration
SeatsApiManager --> Camera
SeatsApiManager --> CsHumanDetector
SeatsApiManager "1"-->"0..10" SeatsApiResult
CppHumanDetector <-- CsHumanDetector

@enduml